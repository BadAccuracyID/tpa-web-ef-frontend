/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 */
const documents = {
    "\n    query login($input: LoginInput!) {\n        login(input: $input) {\n            id,\n            jwtToken,\n        }\n    }\n": types.LoginDocument,
    "\n    mutation register($input: RegisterInput!) {\n        register(input: $input) {\n            id,\n            jwtToken,\n        }\n    }\n": types.RegisterDocument,
    "\n    mutation activateUser($request: String!) {\n        activateUser(request: $request) {\n            id\n        }\n    }\n": types.ActivateUserDocument,
    "\n    query getUserConversations {\n        getUserConversations {\n            id\n            title\n            members {\n                id,\n                email,\n                firstName,\n                lastName,\n                activated,\n                username,\n                gender,\n                dateOfBirth,\n                relations {\n                    user {\n                        id,\n                        email,\n                        firstName,\n                        lastName,\n                        activated,\n                        username,\n                        gender,\n                        dateOfBirth,\n                    },\n                    status,\n                },\n            }\n            messages {\n                id\n                sender {\n                    id,\n                    email,\n                    firstName,\n                    lastName,\n                    activated,\n                    username,\n                    gender,\n                    dateOfBirth,\n                    relations {\n                        user {\n                            id,\n                            email,\n                            firstName,\n                            lastName,\n                            activated,\n                            username,\n                            gender,\n                            dateOfBirth,\n                        },\n                        status,\n                    },\n                }\n                content\n                contentType\n            }\n        }\n    }\n": types.GetUserConversationsDocument,
    "\n    mutation createConversation($input: CreateConversationInput!) {\n        createConversation(input: $input) {\n            id\n            title\n            members {\n                id,\n                email,\n                firstName,\n                lastName,\n                activated,\n                username,\n                gender,\n                dateOfBirth,\n                relations {\n                    user {\n                        id,\n                        email,\n                        firstName,\n                        lastName,\n                        activated,\n                        username,\n                        gender,\n                        dateOfBirth,\n                    },\n                    status,\n                },\n            }\n            messages {\n                id\n                sender {\n                    id,\n                    email,\n                    firstName,\n                    lastName,\n                    activated,\n                    username,\n                    gender,\n                    dateOfBirth,\n                    relations {\n                        user {\n                            id,\n                            email,\n                            firstName,\n                            lastName,\n                            activated,\n                            username,\n                            gender,\n                            dateOfBirth,\n                        },\n                        status,\n                    },\n                }\n                content\n                contentType\n            }\n        }\n    }\n": types.CreateConversationDocument,
    "\n    mutation sendMessage($input: SendMessageInput!) {\n        sendMessage(input: $input) {\n            id\n            sender {\n                id,\n                email,\n                firstName,\n                lastName,\n                activated,\n                username,\n                gender,\n                dateOfBirth,\n                relations {\n                    user {\n                        id,\n                        email,\n                        firstName,\n                        lastName,\n                        activated,\n                        username,\n                        gender,\n                        dateOfBirth,\n                    },\n                    status,\n                },\n            }\n            content\n            contentType\n        }\n    }\n": types.SendMessageDocument,
    "\n    subscription subscribeConversation($conversationId: ID!) {\n        subscribeConversation(conversationId: $conversationId) {\n            id\n            sender {\n                id,\n                email,\n                firstName,\n                lastName,\n                activated,\n                username,\n                gender,\n                dateOfBirth,\n                relations {\n                    user {\n                        id,\n                        email,\n                        firstName,\n                        lastName,\n                        activated,\n                        username,\n                        gender,\n                        dateOfBirth,\n                    },\n                    status,\n                },\n            }\n            content\n            contentType\n        }\n    }\n": types.SubscribeConversationDocument,
    "\n    query getNotifications {\n        getNotifications {\n            id\n            type\n            content\n            contentMedia\n            read\n            createdAt\n        }\n    }\n": types.GetNotificationsDocument,
    "\n    mutation readNotification($id: ID!) {\n        readNotification(id: $id)\n    }\n": types.ReadNotificationDocument,
    "\n    query getPosts($pageNumber: Int, $limit: Int) {\n        getPosts(pageNumber: $pageNumber, limit: $limit) {\n            posts {\n                id\n                title\n                audience\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n\n                sharedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                comments {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    replies {\n                        id\n                        holderId\n                        author {\n                            id\n                            firstName\n                            lastName\n                            activated\n                            username\n                            email\n                            dateOfBirth\n                            gender\n                        }\n                        textContent\n                        likedBy {\n                            id\n                            firstName\n                            lastName\n                            activated\n                            username\n                            email\n                            dateOfBirth\n                            gender\n                        }\n                        createdAt\n                    }\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n\n                textContent\n                imageContent\n                videoContent\n\n                taggedUsers {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                hashtags\n\n                createdAt\n            }\n        }\n    }\n": types.GetPostsDocument,
    "\n    query getPost($id: ID!) {\n        getPost(id: $id) {\n            id\n            title\n            audience\n            author {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n\n            sharedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            likedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            comments {\n                id\n                holderId\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                textContent\n                replies {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                createdAt\n            }\n\n            textContent\n            imageContent\n            videoContent\n\n            taggedUsers {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            hashtags\n\n            createdAt\n        }\n    }\n": types.GetPostDocument,
    "\n    query getPostsByUser($id: ID!, $pageNumber: Int, $limit: Int) {\n        getPostsByUser(id: $id, pageNumber: $pageNumber, limit: $limit) {\n            posts {\n                id\n                title\n                audience\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n\n                sharedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                comments {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    replies {\n                        id\n                        holderId\n                        author {\n                            id\n                            firstName\n                            lastName\n                            activated\n                            username\n                            email\n                            dateOfBirth\n                            gender\n                        }\n                        textContent\n                        likedBy {\n                            id\n                            firstName\n                            lastName\n                            activated\n                            username\n                            email\n                            dateOfBirth\n                            gender\n                        }\n                        createdAt\n                    }\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n\n                textContent\n                imageContent\n                videoContent\n\n                taggedUsers {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                hashtags\n\n                createdAt\n            }\n        }\n    }\n": types.GetPostsByUserDocument,
    "\n    mutation createPost($input: PostInput!) {\n        createPost(input: $input) {\n            id\n            title\n            audience\n            author {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n\n            sharedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            likedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            comments {\n                id\n                holderId\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                textContent\n                replies {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                createdAt\n            }\n\n            textContent\n            imageContent\n            videoContent\n\n            taggedUsers {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            hashtags\n\n            createdAt\n        }\n    }\n": types.CreatePostDocument,
    "\n    mutation deletePost($id: ID!) {\n        deletePost(id: $id) {\n            id\n            title\n            audience\n            author {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n\n            sharedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            likedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            comments {\n                id\n                holderId\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                textContent\n                replies {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                createdAt\n            }\n\n            textContent\n            imageContent\n            videoContent\n\n            taggedUsers {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            hashtags\n\n            createdAt\n        }\n    }\n": types.DeletePostDocument,
    "\n    mutation likePost($id: ID!) {\n        likePost(id: $id) {\n            id\n            title\n            audience\n            author {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n\n            sharedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            likedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            comments {\n                id\n                holderId\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                textContent\n                replies {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                createdAt\n            }\n\n            textContent\n            imageContent\n            videoContent\n\n            taggedUsers {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            hashtags\n\n            createdAt\n        }\n    }\n": types.LikePostDocument,
    "\n    mutation unlikePost($id: ID!) {\n        unlikePost(id: $id) {\n            id\n            title\n            audience\n            author {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n\n            sharedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            likedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            comments {\n                id\n                holderId\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                textContent\n                replies {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                createdAt\n            }\n\n            textContent\n            imageContent\n            videoContent\n\n            taggedUsers {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            hashtags\n\n            createdAt\n        }\n    }\n": types.UnlikePostDocument,
    "\n    mutation createComment($input: CommentInput!) {\n        createComment(input: $input) {\n            id\n            holderId\n            author {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            textContent\n            replies {\n                id\n                holderId\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                textContent\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                createdAt\n            }\n            likedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            createdAt\n        }\n    }\n": types.CreateCommentDocument,
    "\n    query getFriendRequests {\n        getFriendRequests {\n            from\n            to\n            status\n            createdAt\n            fromUser {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n        }\n    }\n": types.GetFriendRequestsDocument,
    "\n    query getFriendRecommendations {\n        getFriendRecommendations {\n            id\n            firstName\n            lastName\n            activated\n            username\n            email\n            dateOfBirth\n            gender\n        }\n    }\n\n": types.GetFriendRecommendationsDocument,
    "\n    mutation sendFriendRequest($to: ID!) {\n        sendFriendRequest(to: $to) {\n            from\n            to\n            status\n            createdAt\n        }\n    }\n": types.SendFriendRequestDocument,
    "\n    mutation acceptFriendRequest($from: ID!) {\n        acceptFriendRequest(from: $from) {\n            from\n            to\n            status\n            createdAt\n        }\n    }\n": types.AcceptFriendRequestDocument,
    "\n    mutation rejectFriendRequest($from: ID!) {\n        rejectFriendRequest(from: $from) {\n            from\n            to\n            status\n            createdAt\n        }\n    }\n": types.RejectFriendRequestDocument,
    "\n    mutation changeFriendshipStatus($to: ID!, $status: String!) {\n        changeFriendshipStatus(to: $to, status: $status) {\n            from\n            to\n            status\n            createdAt\n        }\n    }\n": types.ChangeFriendshipStatusDocument,
    "\n    query search($query: String!) {\n        search(query: $query) {\n            type\n\n            ... on User {\n                id,\n                email,\n                firstName,\n                lastName,\n                activated,\n                username,\n                gender,\n                dateOfBirth,\n                relations {\n                    user {\n                        id,\n                        email,\n                        firstName,\n                        lastName,\n                        activated,\n                        username,\n                        gender,\n                        dateOfBirth,\n                    },\n                    status,\n                },\n                type\n            }\n\n            ... on Post {\n                id\n                title\n                audience\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n\n                sharedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                comments {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    replies {\n                        id\n                        holderId\n                        author {\n                            id\n                            firstName\n                            lastName\n                            activated\n                            username\n                            email\n                            dateOfBirth\n                            gender\n                        }\n                        textContent\n                        likedBy {\n                            id\n                            firstName\n                            lastName\n                            activated\n                            username\n                            email\n                            dateOfBirth\n                            gender\n                        }\n                        createdAt\n                    }\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n\n                textContent\n                imageContent\n                videoContent\n\n                taggedUsers {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                hashtags\n\n                createdAt\n                type\n            }\n\n            ... on Group {\n                id\n                type\n            }\n        }\n    }\n": types.SearchDocument,
    "\n    query getCurrentUser {\n        getCurrentUser {\n            id,\n            email,\n            firstName,\n            lastName,\n            activated,\n            username,\n            gender,\n            dateOfBirth,\n            profilePicture,\n            relations {\n                user {\n                    id,\n                    email,\n                    firstName,\n                    lastName,\n                    activated,\n                    username,\n                    gender,\n                    dateOfBirth,\n                },\n                status,\n            },\n        }\n    }\n": types.GetCurrentUserDocument,
    "\n    query getUser($id: ID!) {\n        getUser(id: $id) {\n            id,\n            email,\n            firstName,\n            lastName,\n            activated,\n            username,\n            gender,\n            dateOfBirth,\n            profilePicture,\n            relations {\n                user {\n                    id,\n                    email,\n                    firstName,\n                    lastName,\n                    activated,\n                    username,\n                    gender,\n                    dateOfBirth,\n                },\n                status,\n            },\n        }\n    }\n": types.GetUserDocument,
    "\n    mutation updateCurrentUser($input: UserInput!) {\n        updateCurrentUser(input: $input) {\n            id,\n            email,\n            firstName,\n            lastName,\n            activated,\n            username,\n            gender,\n            dateOfBirth,\n            profilePicture,\n            relations {\n                user {\n                    id,\n                    email,\n                    firstName,\n                    lastName,\n                    activated,\n                    username,\n                    gender,\n                    dateOfBirth,\n                },\n                status,\n            },\n        }\n    }\n": types.UpdateCurrentUserDocument,
};

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = graphql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function graphql(source: string): unknown;

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    query login($input: LoginInput!) {\n        login(input: $input) {\n            id,\n            jwtToken,\n        }\n    }\n"): (typeof documents)["\n    query login($input: LoginInput!) {\n        login(input: $input) {\n            id,\n            jwtToken,\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    mutation register($input: RegisterInput!) {\n        register(input: $input) {\n            id,\n            jwtToken,\n        }\n    }\n"): (typeof documents)["\n    mutation register($input: RegisterInput!) {\n        register(input: $input) {\n            id,\n            jwtToken,\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    mutation activateUser($request: String!) {\n        activateUser(request: $request) {\n            id\n        }\n    }\n"): (typeof documents)["\n    mutation activateUser($request: String!) {\n        activateUser(request: $request) {\n            id\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    query getUserConversations {\n        getUserConversations {\n            id\n            title\n            members {\n                id,\n                email,\n                firstName,\n                lastName,\n                activated,\n                username,\n                gender,\n                dateOfBirth,\n                relations {\n                    user {\n                        id,\n                        email,\n                        firstName,\n                        lastName,\n                        activated,\n                        username,\n                        gender,\n                        dateOfBirth,\n                    },\n                    status,\n                },\n            }\n            messages {\n                id\n                sender {\n                    id,\n                    email,\n                    firstName,\n                    lastName,\n                    activated,\n                    username,\n                    gender,\n                    dateOfBirth,\n                    relations {\n                        user {\n                            id,\n                            email,\n                            firstName,\n                            lastName,\n                            activated,\n                            username,\n                            gender,\n                            dateOfBirth,\n                        },\n                        status,\n                    },\n                }\n                content\n                contentType\n            }\n        }\n    }\n"): (typeof documents)["\n    query getUserConversations {\n        getUserConversations {\n            id\n            title\n            members {\n                id,\n                email,\n                firstName,\n                lastName,\n                activated,\n                username,\n                gender,\n                dateOfBirth,\n                relations {\n                    user {\n                        id,\n                        email,\n                        firstName,\n                        lastName,\n                        activated,\n                        username,\n                        gender,\n                        dateOfBirth,\n                    },\n                    status,\n                },\n            }\n            messages {\n                id\n                sender {\n                    id,\n                    email,\n                    firstName,\n                    lastName,\n                    activated,\n                    username,\n                    gender,\n                    dateOfBirth,\n                    relations {\n                        user {\n                            id,\n                            email,\n                            firstName,\n                            lastName,\n                            activated,\n                            username,\n                            gender,\n                            dateOfBirth,\n                        },\n                        status,\n                    },\n                }\n                content\n                contentType\n            }\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    mutation createConversation($input: CreateConversationInput!) {\n        createConversation(input: $input) {\n            id\n            title\n            members {\n                id,\n                email,\n                firstName,\n                lastName,\n                activated,\n                username,\n                gender,\n                dateOfBirth,\n                relations {\n                    user {\n                        id,\n                        email,\n                        firstName,\n                        lastName,\n                        activated,\n                        username,\n                        gender,\n                        dateOfBirth,\n                    },\n                    status,\n                },\n            }\n            messages {\n                id\n                sender {\n                    id,\n                    email,\n                    firstName,\n                    lastName,\n                    activated,\n                    username,\n                    gender,\n                    dateOfBirth,\n                    relations {\n                        user {\n                            id,\n                            email,\n                            firstName,\n                            lastName,\n                            activated,\n                            username,\n                            gender,\n                            dateOfBirth,\n                        },\n                        status,\n                    },\n                }\n                content\n                contentType\n            }\n        }\n    }\n"): (typeof documents)["\n    mutation createConversation($input: CreateConversationInput!) {\n        createConversation(input: $input) {\n            id\n            title\n            members {\n                id,\n                email,\n                firstName,\n                lastName,\n                activated,\n                username,\n                gender,\n                dateOfBirth,\n                relations {\n                    user {\n                        id,\n                        email,\n                        firstName,\n                        lastName,\n                        activated,\n                        username,\n                        gender,\n                        dateOfBirth,\n                    },\n                    status,\n                },\n            }\n            messages {\n                id\n                sender {\n                    id,\n                    email,\n                    firstName,\n                    lastName,\n                    activated,\n                    username,\n                    gender,\n                    dateOfBirth,\n                    relations {\n                        user {\n                            id,\n                            email,\n                            firstName,\n                            lastName,\n                            activated,\n                            username,\n                            gender,\n                            dateOfBirth,\n                        },\n                        status,\n                    },\n                }\n                content\n                contentType\n            }\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    mutation sendMessage($input: SendMessageInput!) {\n        sendMessage(input: $input) {\n            id\n            sender {\n                id,\n                email,\n                firstName,\n                lastName,\n                activated,\n                username,\n                gender,\n                dateOfBirth,\n                relations {\n                    user {\n                        id,\n                        email,\n                        firstName,\n                        lastName,\n                        activated,\n                        username,\n                        gender,\n                        dateOfBirth,\n                    },\n                    status,\n                },\n            }\n            content\n            contentType\n        }\n    }\n"): (typeof documents)["\n    mutation sendMessage($input: SendMessageInput!) {\n        sendMessage(input: $input) {\n            id\n            sender {\n                id,\n                email,\n                firstName,\n                lastName,\n                activated,\n                username,\n                gender,\n                dateOfBirth,\n                relations {\n                    user {\n                        id,\n                        email,\n                        firstName,\n                        lastName,\n                        activated,\n                        username,\n                        gender,\n                        dateOfBirth,\n                    },\n                    status,\n                },\n            }\n            content\n            contentType\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    subscription subscribeConversation($conversationId: ID!) {\n        subscribeConversation(conversationId: $conversationId) {\n            id\n            sender {\n                id,\n                email,\n                firstName,\n                lastName,\n                activated,\n                username,\n                gender,\n                dateOfBirth,\n                relations {\n                    user {\n                        id,\n                        email,\n                        firstName,\n                        lastName,\n                        activated,\n                        username,\n                        gender,\n                        dateOfBirth,\n                    },\n                    status,\n                },\n            }\n            content\n            contentType\n        }\n    }\n"): (typeof documents)["\n    subscription subscribeConversation($conversationId: ID!) {\n        subscribeConversation(conversationId: $conversationId) {\n            id\n            sender {\n                id,\n                email,\n                firstName,\n                lastName,\n                activated,\n                username,\n                gender,\n                dateOfBirth,\n                relations {\n                    user {\n                        id,\n                        email,\n                        firstName,\n                        lastName,\n                        activated,\n                        username,\n                        gender,\n                        dateOfBirth,\n                    },\n                    status,\n                },\n            }\n            content\n            contentType\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    query getNotifications {\n        getNotifications {\n            id\n            type\n            content\n            contentMedia\n            read\n            createdAt\n        }\n    }\n"): (typeof documents)["\n    query getNotifications {\n        getNotifications {\n            id\n            type\n            content\n            contentMedia\n            read\n            createdAt\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    mutation readNotification($id: ID!) {\n        readNotification(id: $id)\n    }\n"): (typeof documents)["\n    mutation readNotification($id: ID!) {\n        readNotification(id: $id)\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    query getPosts($pageNumber: Int, $limit: Int) {\n        getPosts(pageNumber: $pageNumber, limit: $limit) {\n            posts {\n                id\n                title\n                audience\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n\n                sharedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                comments {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    replies {\n                        id\n                        holderId\n                        author {\n                            id\n                            firstName\n                            lastName\n                            activated\n                            username\n                            email\n                            dateOfBirth\n                            gender\n                        }\n                        textContent\n                        likedBy {\n                            id\n                            firstName\n                            lastName\n                            activated\n                            username\n                            email\n                            dateOfBirth\n                            gender\n                        }\n                        createdAt\n                    }\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n\n                textContent\n                imageContent\n                videoContent\n\n                taggedUsers {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                hashtags\n\n                createdAt\n            }\n        }\n    }\n"): (typeof documents)["\n    query getPosts($pageNumber: Int, $limit: Int) {\n        getPosts(pageNumber: $pageNumber, limit: $limit) {\n            posts {\n                id\n                title\n                audience\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n\n                sharedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                comments {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    replies {\n                        id\n                        holderId\n                        author {\n                            id\n                            firstName\n                            lastName\n                            activated\n                            username\n                            email\n                            dateOfBirth\n                            gender\n                        }\n                        textContent\n                        likedBy {\n                            id\n                            firstName\n                            lastName\n                            activated\n                            username\n                            email\n                            dateOfBirth\n                            gender\n                        }\n                        createdAt\n                    }\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n\n                textContent\n                imageContent\n                videoContent\n\n                taggedUsers {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                hashtags\n\n                createdAt\n            }\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    query getPost($id: ID!) {\n        getPost(id: $id) {\n            id\n            title\n            audience\n            author {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n\n            sharedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            likedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            comments {\n                id\n                holderId\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                textContent\n                replies {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                createdAt\n            }\n\n            textContent\n            imageContent\n            videoContent\n\n            taggedUsers {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            hashtags\n\n            createdAt\n        }\n    }\n"): (typeof documents)["\n    query getPost($id: ID!) {\n        getPost(id: $id) {\n            id\n            title\n            audience\n            author {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n\n            sharedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            likedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            comments {\n                id\n                holderId\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                textContent\n                replies {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                createdAt\n            }\n\n            textContent\n            imageContent\n            videoContent\n\n            taggedUsers {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            hashtags\n\n            createdAt\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    query getPostsByUser($id: ID!, $pageNumber: Int, $limit: Int) {\n        getPostsByUser(id: $id, pageNumber: $pageNumber, limit: $limit) {\n            posts {\n                id\n                title\n                audience\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n\n                sharedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                comments {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    replies {\n                        id\n                        holderId\n                        author {\n                            id\n                            firstName\n                            lastName\n                            activated\n                            username\n                            email\n                            dateOfBirth\n                            gender\n                        }\n                        textContent\n                        likedBy {\n                            id\n                            firstName\n                            lastName\n                            activated\n                            username\n                            email\n                            dateOfBirth\n                            gender\n                        }\n                        createdAt\n                    }\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n\n                textContent\n                imageContent\n                videoContent\n\n                taggedUsers {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                hashtags\n\n                createdAt\n            }\n        }\n    }\n"): (typeof documents)["\n    query getPostsByUser($id: ID!, $pageNumber: Int, $limit: Int) {\n        getPostsByUser(id: $id, pageNumber: $pageNumber, limit: $limit) {\n            posts {\n                id\n                title\n                audience\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n\n                sharedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                comments {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    replies {\n                        id\n                        holderId\n                        author {\n                            id\n                            firstName\n                            lastName\n                            activated\n                            username\n                            email\n                            dateOfBirth\n                            gender\n                        }\n                        textContent\n                        likedBy {\n                            id\n                            firstName\n                            lastName\n                            activated\n                            username\n                            email\n                            dateOfBirth\n                            gender\n                        }\n                        createdAt\n                    }\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n\n                textContent\n                imageContent\n                videoContent\n\n                taggedUsers {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                hashtags\n\n                createdAt\n            }\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    mutation createPost($input: PostInput!) {\n        createPost(input: $input) {\n            id\n            title\n            audience\n            author {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n\n            sharedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            likedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            comments {\n                id\n                holderId\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                textContent\n                replies {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                createdAt\n            }\n\n            textContent\n            imageContent\n            videoContent\n\n            taggedUsers {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            hashtags\n\n            createdAt\n        }\n    }\n"): (typeof documents)["\n    mutation createPost($input: PostInput!) {\n        createPost(input: $input) {\n            id\n            title\n            audience\n            author {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n\n            sharedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            likedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            comments {\n                id\n                holderId\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                textContent\n                replies {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                createdAt\n            }\n\n            textContent\n            imageContent\n            videoContent\n\n            taggedUsers {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            hashtags\n\n            createdAt\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    mutation deletePost($id: ID!) {\n        deletePost(id: $id) {\n            id\n            title\n            audience\n            author {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n\n            sharedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            likedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            comments {\n                id\n                holderId\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                textContent\n                replies {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                createdAt\n            }\n\n            textContent\n            imageContent\n            videoContent\n\n            taggedUsers {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            hashtags\n\n            createdAt\n        }\n    }\n"): (typeof documents)["\n    mutation deletePost($id: ID!) {\n        deletePost(id: $id) {\n            id\n            title\n            audience\n            author {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n\n            sharedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            likedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            comments {\n                id\n                holderId\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                textContent\n                replies {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                createdAt\n            }\n\n            textContent\n            imageContent\n            videoContent\n\n            taggedUsers {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            hashtags\n\n            createdAt\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    mutation likePost($id: ID!) {\n        likePost(id: $id) {\n            id\n            title\n            audience\n            author {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n\n            sharedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            likedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            comments {\n                id\n                holderId\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                textContent\n                replies {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                createdAt\n            }\n\n            textContent\n            imageContent\n            videoContent\n\n            taggedUsers {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            hashtags\n\n            createdAt\n        }\n    }\n"): (typeof documents)["\n    mutation likePost($id: ID!) {\n        likePost(id: $id) {\n            id\n            title\n            audience\n            author {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n\n            sharedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            likedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            comments {\n                id\n                holderId\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                textContent\n                replies {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                createdAt\n            }\n\n            textContent\n            imageContent\n            videoContent\n\n            taggedUsers {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            hashtags\n\n            createdAt\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    mutation unlikePost($id: ID!) {\n        unlikePost(id: $id) {\n            id\n            title\n            audience\n            author {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n\n            sharedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            likedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            comments {\n                id\n                holderId\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                textContent\n                replies {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                createdAt\n            }\n\n            textContent\n            imageContent\n            videoContent\n\n            taggedUsers {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            hashtags\n\n            createdAt\n        }\n    }\n"): (typeof documents)["\n    mutation unlikePost($id: ID!) {\n        unlikePost(id: $id) {\n            id\n            title\n            audience\n            author {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n\n            sharedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            likedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            comments {\n                id\n                holderId\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                textContent\n                replies {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                createdAt\n            }\n\n            textContent\n            imageContent\n            videoContent\n\n            taggedUsers {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            hashtags\n\n            createdAt\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    mutation createComment($input: CommentInput!) {\n        createComment(input: $input) {\n            id\n            holderId\n            author {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            textContent\n            replies {\n                id\n                holderId\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                textContent\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                createdAt\n            }\n            likedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            createdAt\n        }\n    }\n"): (typeof documents)["\n    mutation createComment($input: CommentInput!) {\n        createComment(input: $input) {\n            id\n            holderId\n            author {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            textContent\n            replies {\n                id\n                holderId\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                textContent\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                createdAt\n            }\n            likedBy {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n            createdAt\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    query getFriendRequests {\n        getFriendRequests {\n            from\n            to\n            status\n            createdAt\n            fromUser {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n        }\n    }\n"): (typeof documents)["\n    query getFriendRequests {\n        getFriendRequests {\n            from\n            to\n            status\n            createdAt\n            fromUser {\n                id\n                firstName\n                lastName\n                activated\n                username\n                email\n                dateOfBirth\n                gender\n            }\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    query getFriendRecommendations {\n        getFriendRecommendations {\n            id\n            firstName\n            lastName\n            activated\n            username\n            email\n            dateOfBirth\n            gender\n        }\n    }\n\n"): (typeof documents)["\n    query getFriendRecommendations {\n        getFriendRecommendations {\n            id\n            firstName\n            lastName\n            activated\n            username\n            email\n            dateOfBirth\n            gender\n        }\n    }\n\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    mutation sendFriendRequest($to: ID!) {\n        sendFriendRequest(to: $to) {\n            from\n            to\n            status\n            createdAt\n        }\n    }\n"): (typeof documents)["\n    mutation sendFriendRequest($to: ID!) {\n        sendFriendRequest(to: $to) {\n            from\n            to\n            status\n            createdAt\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    mutation acceptFriendRequest($from: ID!) {\n        acceptFriendRequest(from: $from) {\n            from\n            to\n            status\n            createdAt\n        }\n    }\n"): (typeof documents)["\n    mutation acceptFriendRequest($from: ID!) {\n        acceptFriendRequest(from: $from) {\n            from\n            to\n            status\n            createdAt\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    mutation rejectFriendRequest($from: ID!) {\n        rejectFriendRequest(from: $from) {\n            from\n            to\n            status\n            createdAt\n        }\n    }\n"): (typeof documents)["\n    mutation rejectFriendRequest($from: ID!) {\n        rejectFriendRequest(from: $from) {\n            from\n            to\n            status\n            createdAt\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    mutation changeFriendshipStatus($to: ID!, $status: String!) {\n        changeFriendshipStatus(to: $to, status: $status) {\n            from\n            to\n            status\n            createdAt\n        }\n    }\n"): (typeof documents)["\n    mutation changeFriendshipStatus($to: ID!, $status: String!) {\n        changeFriendshipStatus(to: $to, status: $status) {\n            from\n            to\n            status\n            createdAt\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    query search($query: String!) {\n        search(query: $query) {\n            type\n\n            ... on User {\n                id,\n                email,\n                firstName,\n                lastName,\n                activated,\n                username,\n                gender,\n                dateOfBirth,\n                relations {\n                    user {\n                        id,\n                        email,\n                        firstName,\n                        lastName,\n                        activated,\n                        username,\n                        gender,\n                        dateOfBirth,\n                    },\n                    status,\n                },\n                type\n            }\n\n            ... on Post {\n                id\n                title\n                audience\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n\n                sharedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                comments {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    replies {\n                        id\n                        holderId\n                        author {\n                            id\n                            firstName\n                            lastName\n                            activated\n                            username\n                            email\n                            dateOfBirth\n                            gender\n                        }\n                        textContent\n                        likedBy {\n                            id\n                            firstName\n                            lastName\n                            activated\n                            username\n                            email\n                            dateOfBirth\n                            gender\n                        }\n                        createdAt\n                    }\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n\n                textContent\n                imageContent\n                videoContent\n\n                taggedUsers {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                hashtags\n\n                createdAt\n                type\n            }\n\n            ... on Group {\n                id\n                type\n            }\n        }\n    }\n"): (typeof documents)["\n    query search($query: String!) {\n        search(query: $query) {\n            type\n\n            ... on User {\n                id,\n                email,\n                firstName,\n                lastName,\n                activated,\n                username,\n                gender,\n                dateOfBirth,\n                relations {\n                    user {\n                        id,\n                        email,\n                        firstName,\n                        lastName,\n                        activated,\n                        username,\n                        gender,\n                        dateOfBirth,\n                    },\n                    status,\n                },\n                type\n            }\n\n            ... on Post {\n                id\n                title\n                audience\n                author {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n\n                sharedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                likedBy {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                comments {\n                    id\n                    holderId\n                    author {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    textContent\n                    replies {\n                        id\n                        holderId\n                        author {\n                            id\n                            firstName\n                            lastName\n                            activated\n                            username\n                            email\n                            dateOfBirth\n                            gender\n                        }\n                        textContent\n                        likedBy {\n                            id\n                            firstName\n                            lastName\n                            activated\n                            username\n                            email\n                            dateOfBirth\n                            gender\n                        }\n                        createdAt\n                    }\n                    likedBy {\n                        id\n                        firstName\n                        lastName\n                        activated\n                        username\n                        email\n                        dateOfBirth\n                        gender\n                    }\n                    createdAt\n                }\n\n                textContent\n                imageContent\n                videoContent\n\n                taggedUsers {\n                    id\n                    firstName\n                    lastName\n                    activated\n                    username\n                    email\n                    dateOfBirth\n                    gender\n                }\n                hashtags\n\n                createdAt\n                type\n            }\n\n            ... on Group {\n                id\n                type\n            }\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    query getCurrentUser {\n        getCurrentUser {\n            id,\n            email,\n            firstName,\n            lastName,\n            activated,\n            username,\n            gender,\n            dateOfBirth,\n            profilePicture,\n            relations {\n                user {\n                    id,\n                    email,\n                    firstName,\n                    lastName,\n                    activated,\n                    username,\n                    gender,\n                    dateOfBirth,\n                },\n                status,\n            },\n        }\n    }\n"): (typeof documents)["\n    query getCurrentUser {\n        getCurrentUser {\n            id,\n            email,\n            firstName,\n            lastName,\n            activated,\n            username,\n            gender,\n            dateOfBirth,\n            profilePicture,\n            relations {\n                user {\n                    id,\n                    email,\n                    firstName,\n                    lastName,\n                    activated,\n                    username,\n                    gender,\n                    dateOfBirth,\n                },\n                status,\n            },\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    query getUser($id: ID!) {\n        getUser(id: $id) {\n            id,\n            email,\n            firstName,\n            lastName,\n            activated,\n            username,\n            gender,\n            dateOfBirth,\n            profilePicture,\n            relations {\n                user {\n                    id,\n                    email,\n                    firstName,\n                    lastName,\n                    activated,\n                    username,\n                    gender,\n                    dateOfBirth,\n                },\n                status,\n            },\n        }\n    }\n"): (typeof documents)["\n    query getUser($id: ID!) {\n        getUser(id: $id) {\n            id,\n            email,\n            firstName,\n            lastName,\n            activated,\n            username,\n            gender,\n            dateOfBirth,\n            profilePicture,\n            relations {\n                user {\n                    id,\n                    email,\n                    firstName,\n                    lastName,\n                    activated,\n                    username,\n                    gender,\n                    dateOfBirth,\n                },\n                status,\n            },\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    mutation updateCurrentUser($input: UserInput!) {\n        updateCurrentUser(input: $input) {\n            id,\n            email,\n            firstName,\n            lastName,\n            activated,\n            username,\n            gender,\n            dateOfBirth,\n            profilePicture,\n            relations {\n                user {\n                    id,\n                    email,\n                    firstName,\n                    lastName,\n                    activated,\n                    username,\n                    gender,\n                    dateOfBirth,\n                },\n                status,\n            },\n        }\n    }\n"): (typeof documents)["\n    mutation updateCurrentUser($input: UserInput!) {\n        updateCurrentUser(input: $input) {\n            id,\n            email,\n            firstName,\n            lastName,\n            activated,\n            username,\n            gender,\n            dateOfBirth,\n            profilePicture,\n            relations {\n                user {\n                    id,\n                    email,\n                    firstName,\n                    lastName,\n                    activated,\n                    username,\n                    gender,\n                    dateOfBirth,\n                },\n                status,\n            },\n        }\n    }\n"];

export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;